/*
Navicat MySQL Data Transfer

Source Server         : 本机Mysql数据库
Source Server Version : 50638
Source Host           : localhost:3306
Source Database       : javaforum

Target Server Type    : MYSQL
Target Server Version : 50638
File Encoding         : 65001

Date: 2018-06-02 14:03:56
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for blacklist
-- ----------------------------
DROP TABLE IF EXISTS `blacklist`;
CREATE TABLE `blacklist` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `blacklist_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blacklist
-- ----------------------------

-- ----------------------------
-- Table structure for block
-- ----------------------------
DROP TABLE IF EXISTS `block`;
CREATE TABLE `block` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(20) NOT NULL,
  `content` text NOT NULL,
  `level` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of block
-- ----------------------------
INSERT INTO `block` VALUES ('1', '语言基础版块', '', '10');
INSERT INTO `block` VALUES ('2', '面向对象版块', '', '20');
INSERT INTO `block` VALUES ('3', '集合版块', '', '30');
INSERT INTO `block` VALUES ('4', '泛型版块', '', '40');
INSERT INTO `block` VALUES ('5', '常用类库版块', '', '50');
INSERT INTO `block` VALUES ('6', '异常处理版块', '', '60');
INSERT INTO `block` VALUES ('7', 'AWT编程版块', '', '70');
INSERT INTO `block` VALUES ('8', 'Swing编程版块', '', '80');
INSERT INTO `block` VALUES ('9', 'JDBC编程版块', '', '90');
INSERT INTO `block` VALUES ('10', '注解编程版块', '', '100');
INSERT INTO `block` VALUES ('11', '输入/输出编程版块', '', '110');
INSERT INTO `block` VALUES ('12', '多线程编程版块', '', '120');
INSERT INTO `block` VALUES ('13', '网络编程版块', '', '130');
INSERT INTO `block` VALUES ('14', '类加载/反射编程版块', '', '140');

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text,
  `postTime` date NOT NULL,
  `updateTime` date NOT NULL,
  `post_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `post_id` (`post_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `comment_ibfk_1` FOREIGN KEY (`post_id`) REFERENCES `post` (`id`),
  CONSTRAINT `comment_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comment
-- ----------------------------

-- ----------------------------
-- Table structure for post
-- ----------------------------
DROP TABLE IF EXISTS `post`;
CREATE TABLE `post` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(80) NOT NULL,
  `content` text,
  `postTime` date NOT NULL,
  `updateTime` date NOT NULL,
  `block_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `block_id` (`block_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `post_ibfk_1` FOREIGN KEY (`block_id`) REFERENCES `block` (`id`),
  CONSTRAINT `post_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of post
-- ----------------------------
INSERT INTO `post` VALUES ('3', 'JAVA语法基础之流程控制', '<p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">在进行程序设计的时候，我们会经常进行逻辑判断，根据不同的结果做不同的事，或者重复做某件事，我们对类似这样的工作称为流程控制。在Java中，流程控制分为两大类：选择和循环。下面就依次来介绍这两类。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">一、选择</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">选择控制分为两种：if...else...和switch</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">1、if...else...，这种控制在表现上分为：单分支结构、双分支结构和多分支结构</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">1）单分支</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">单分支结构。这是最简单的一种选择结构，它只是简单的判断某个条件是否成立，如果成立就执行一段代码，语句形式为：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">if(表达式){</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">2）双分支</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">这是一个标准的，完整的if语句实现形式，它首先判断某个条件是否成立，如果成立就执行一段代码，如果条件不成立则执行另一段代码，语句形式为：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">if(表达式){</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}else{</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">3）多分支这是if语句嵌套形式的一种，它是多个if语句的嵌套，语句形式如下：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">if(表达式){</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}else if(表达式){</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}else{</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">2、switch</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">switch语句专用于实现多分支结构程序，其特点是各分支清晰而直观。switch语句后面的括号中可以是任何表达式，取其整数部分与各常量表达式比较。其中常量表达式必须是能够自动转换为整型的，如字符型、短整型、枚举等(JDK7开始支持字符串)。语句形式如下：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">switch(表达式){</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">case 常量表达式1：语句1</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">case 常量表达式2：语句2</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">case 常量表达式n：语句n</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">default: 语句n+1</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">二、循环</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">1、while</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">while语句是循环语句，也是条件语句，语法如下：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">while(条件表达式语句)</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">{</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">当条件表达式的返回值为真时，则执行{}中的执行语句段。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">2、do while</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">do while语句的功能与while语句</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">类似，只不过它是在执行完第一次循环后才检测条件表达式的值，语法如下：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">do</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">{</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">} while(条件表达式)</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">3、for</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">语法如下：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">for(初始化表达式; 循环条件表达式; 循环后的操作表达式)</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">{</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">4、foreach</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">与for类似，常用在遍历数组且不需要关心索引位置的场景（注意JDK版本），语法如下：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">for(数据类型 变量名 : 数组)</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">{</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">......</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">}</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">5、break</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">break语句可以终止循环体中的执行语句和switch语句。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">6、continue</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">continue语句只能出现在循环语句中，用于终止本次循环，进入下一次循环。</p>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('4', 'JAVA语法基础之数组', '<p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">一、一维数组</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">数组是一组具有相同类型和名称的变量集合，能很方便的把一系列相同类型的数据保存在一起，这些变量称为数组元素。每个数组元素都有一个编号，这个编号叫做下标，可以通过下标来区别这些元素，数组下标编号从0开始，数组元素个数称为数组的长度。数组是一种复合数据类型。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">1、一维数组的声明</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">type arrayName[];或type[] arrayName;</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">其中type可以是JAVA中任意的数据类型，数组名arrayName为一个合法的标识符，[]指明该变量是一个数组类型变量。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">2、数组的初始化和使用</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">一维数组定义之后，必须经过初始化才可以使用。数组的初始化分为静态初始化和动态初始化两种：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">静态初始化：在定义数组的同时对数组元素进行初始化，形式为：数组元素类型 数组名[] = {初值3, 初值1, ......, 初值n};，例如：int intArr[] = {1, 2, 3};</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">动态初始化：使用运算符new为数组分配空间，格式为：数组元素类型 数组名[] = new&nbsp;数组元素类型[数组元素个数];</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">3、元素访问</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">数组元素的访问：数组名[下标]。访问规则：下标从0开始；下标可以是整型数或表达式。每个数组都有一个属性length指明它的长度。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">二、多维数组</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">虽然一维数组可以处理一些简单的数据，但是在实际应用中仍显不足，所以Java语言提供了多维数组。Java中允许二维数组中每行的元素个数不同，即每行的列数可以不同。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">1、二维数组的声明与初始化</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">数组元素类型 数组名[][];</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">数组元素类型[][] 数组名;</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">数组名 = new 数组元素类型[行数][列数];</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">例：int a[][];</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">2、二维数组的初始化和使用</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">同样的，二维数组的初始化也分为静态和动态两种。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">静态初始化：在定义数组的同时为数组分配空间。不必指出数组每一维的大小，系统会根据初始化时给出的初始值个数自动算出每一维的大小。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">动态初始化：对高维数组来说，分配内存空间有以下两种方法。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">数组元素类型 数组名[][] = new 数组元素类型[行数][列数];</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">数组元素类型[][] 数组名] = new 数组元素类型[行数][列数];</p>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('5', 'JAVA概述', '<article style=\"box-sizing: inherit; outline: 0px; position: relative; padding-top: 16px; color: rgb(51, 51, 51); font-family: &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px;\"><div id=\"article_content\" class=\"article_content clearfix csdn-tracking-statistics\" data-pid=\"blog\" data-mod=\"popu_307\" data-dsm=\"post\" style=\"box-sizing: inherit; outline: 0px; padding: 0px; margin: 0px; word-break: break-all;\"><div class=\"htmledit_views\" style=\"box-sizing: inherit; outline: 0px; padding: 0px; margin: 0px; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\"><span style=\"outline: 0px; font-weight: 700; word-break: break-all;\">一、JAVA简介</span></p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">&nbsp; &nbsp; Java是一种可以撰写跨平台应用程序的面向对象的程序设计语言。Java 技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于PC、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，同时拥有全球最大的开发者专业社群。</p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">&nbsp; &nbsp; Java是由Sun Microsystems公司推出的Java面向对象程序设计语言（以下简称Java语言）和Java平台的总称。由James Gosling和同事们共同研发，并在1995年正式推出。Java最初被称为Oak，是1991年为消费类电子产品的嵌入式芯片而设计的。1995年更名为Java，并重新设计用于开发Internet应用程序。用Java实现的HotJava浏览器（支持Java applet）显示了Java的魅力：跨平台、动态Web、Internet计算。从此，Java被广泛接受并推动了Web的迅速发展，常用的浏览器均支持Javaapplet。另一方面，Java技术也不断更新。Java自面世后就非常流行，发展迅速，对C++语言形成有力冲击。在全球云计算和移动互联网的产业环境下，Java更具备了显著优势和广阔前景。2010年Oracle公司收购Sun Microsystems。</p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\"><span style=\"outline: 0px; font-weight: 700; word-break: break-all;\">二、JAVA体系</span></p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">&nbsp; &nbsp; Java分为三个体系，分别为Java SE（J2SE，Java2 Platform Standard Edition，标准版），JavaEE（J2EE，Java 2 Platform, Enterprise Edition，企业版），Java ME（J2ME，Java 2 Platform Micro Edition，微型版）。我们平时所说的JAVA实际上指的是Java SE。</p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\"><span style=\"outline: 0px; font-weight: 700; word-break: break-all;\">三、发展历程</span></p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\"></p><ul class=\"list-paddingleft-2\" style=\"outline: 0px; margin-bottom: 24px; list-style-type: square; word-break: break-all;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1995年5月23日，Java语言诞生；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1996年1月，第一个JDK-JDK1.0诞生；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1996年4月，10个最主要的操作系统供应商申明将在其产品中嵌入JAVA技术；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1996年9月，约8.3万个网页应用了JAVA技术来制作；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1997年2月18日，JDK1.1发布；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1997年4月2日，JavaOne会议召开，参与者逾一万人，创当时全球同类会议规模之纪录；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1997年9月，JavaDeveloperConnection社区成员超过十万；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1998年2月，JDK1.1被下载超过2,000,000次；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1998年12月8日，JAVA2企业平台J2EE发布；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">1999年6月，SUN公司发布Java的三个版本：标准版、企业版和微型版；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2000年5月8日，JDK1.3发布；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2000年5月29日，JDK1.4发布；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2001年6月5日，NOKIA宣布，到2003年将出售1亿部支持Java的手机；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2001年9月24日，J2EE1.3发布；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2002年2月26日，J2SE1.4发布，自此Java的计算能力有了大幅提升；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2004年9月30日18:00PM，J2SE1.5发布，成为Java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE1.5更名为Java SE 5.0；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2005年6月，JavaOne大会召开，SUN公司公开Java SE 6。此时，Java的各种版本已经更名，以取消其中的数字“2”：J2EE更名为Java EE，J2SE更名为Java SE，J2ME更名为Java ME；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2006年12月，SUN公司发布JRE6.0；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2009年4月7日Google App Engine开始支持Java；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2009年04月20日，甲骨文74亿美元收购Sun。取得Java的版权；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2010年11月，由于甲骨文对于Java社区的不友善，因此Apache扬言将退出JCP；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2011年7月28日，甲骨文发布Java 7.0的正式版；</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">2014年3月19日，甲骨文公司发布Java 8.0的正式版。</p></li></ul><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\"><span style=\"outline: 0px; font-weight: 700; word-break: break-all;\">四、相关工具</span></p><ul class=\"list-paddingleft-2\" style=\"outline: 0px; margin-bottom: 24px; list-style-type: square; word-break: break-all;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">JDK：Java Development Kit，JAVA开发工具集，用于开发JAVA程序，包含JRE。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">JRE：Java Runtime Environment，JAVA运行环境，用于运行JAVA程序。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">Eclipse：Eclipse 是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具（Java Development Kit，JDK）。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">MyEclipse：MyEclipse，是在eclipse 基础上加上自己的插件开发而成的功能强大的企业级集成开发环境，主要用于Java、Java EE以及移动应用的开发。MyEclipse的功能非常强大，支持也十分广泛，尤其是对各种开源产品的支持相当不错。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">NetBeans：NetBeans是开源软件开发集成环境，是一个开放框架，可扩展的开发平台，可以用于Java、C/C++，PHP等语言的开发，本身是一个开发平台，可以通过扩展插件来扩展功能。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">IDEA：IDEA 全称IntelliJ IDEA，是java语言开发的集成环境，IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的。IDEA是JetBrains公司的产品，这家公司总部位于捷克共和国的首都布拉格，开发人员以严谨著称的东欧程序员为主。</p></li></ul></div></div></article>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('6', 'Java的特点', '<p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">Java是一种“简单”、面向对象、分布式、解释型、健壮、安全、体系结构中立、可移植、高性能和动态的编程语言。</p><ul class=\"list-paddingleft-2\" style=\"outline: 0px; margin-bottom: 24px; list-style-type: square; word-break: break-all; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">简单：Java的设计目的是让专业程序员觉得既易学又好用。假设你有编程经历，你将不觉得Java难掌握，如果你已经理解面向对象编程的基本概念，学习Java见更加容易。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">面向对象：面向对象是现代编程语言的重要特征之一，面向对象技术极大的提高了人们的软件开发能力。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">分布式：分布式包括数据分布和操作分布。数据分布是指数据可以分散在网络的不同主机上，操作分布是指把一个计算分散在不同主机上进行。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">健壮性：</p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">Java是强类型语言。编译器和类载入器保证所有方法调用的正确性。</p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">Java没有指针，不可能引用内存指针，搞成内存或数组越界访问。</p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">Java进行自动内存回收，编程人员无法意外释放内存，不需要判断应该在何处释放内存。</p><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">Java在编译和运行时，都要对可能出现的问题进行检查，以消除错误的产生。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">安全性：当Java用于网络、分布式环境下时就必须要注重安全性。Java通过自己的安全机制防止病毒程序的产生和下载程序对本地系统的威胁破坏。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">体系结构中立、可移植性：Java不是被编译成依附于平台的二进制码，而是字节码。只要有Java运行环境的机器都能执行这个字节码。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">高性能和解释型：Java可以产生跨平台运行的程序，字节码可以在提供Java虚拟机（JVM）的任何一个系统上被解释执行。Java的字节码经过仔细设计，因而很容易便能使用JIT编译技术将字节码直接转换成高性能的本机代码。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">动态：Java是个动态语言，这里指的是类库。在类库中可以自由地加入新的方法和实例变量而不影响读者程序的运行，并且Java通过接口来支持多重继承，使之比严格的类继承具有更灵活的方式和扩展。</p></li></ul>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('7', 'JDK/bin目录下的不同exe文件的用途', '<p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">安装完JDK,大家是否发现安装目录的bin文件夹有很多exe文件。下面就为大家介绍一下不同exe文件的用途。</p><ul class=\"list-paddingleft-2\" style=\"outline: 0px; margin-bottom: 24px; list-style-type: square; word-break: break-all; color: rgb(51, 51, 51); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">javac：Java编译器，将Java源代码换成字节代。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">java：Java解释器，直接从类文件执行Java应用程序代码。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">appletviewer：小程序浏览器，一种执行HTML文件上的Java小程序类的Java浏览器&nbsp;<br style=\"outline: 0px; word-break: break-all;\">javadoc：根据Java源代码及其说明语句生成的HTML文档。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">jdb：Java调试器，可以逐行地执行程序、设置断点和检查变量。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">javah：产生可以调用Java过程的C过程，或建立能被Java程序调用的C过程的头文件。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">Javap：Java反汇编器，显示编译类文件中的可访问功能和数据，同时显示字节代码含义。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">jar：多用途的存档及压缩工具，是个java应用程序，可将多个文件合并为单个JAR归档文件。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">htmlConverter：命令转换工具。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">native2ascii：将含有不是Unicode或Latinl字符的的文件转换为Unicode编码字符的文件。</p></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; word-break: break-all;\"><p style=\"outline: 0px; margin-bottom: 16px; font-size: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all;\">serialver：返回serialverUID。语法：serialver [show] 命令选项show是用来显示一个简单的界面。输入完整的类名按Enter键或\"显示\"按钮，可显示serialverUID。</p></li></ul><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\"><br style=\"outline: 0px; word-break: break-all;\"></p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">用法如下：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">javac.exe&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">用法：javac &lt;选项&gt; &lt;源文件&gt;&nbsp;<br style=\"outline: 0px; word-break: break-all;\">可能的选项包括：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-g 生成所有调试信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-g:none 生成无调试信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-g:{lines,vars,source} 生成只有部分调试信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-O 优化；可能妨碍调试或者增大类文件&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-nowarn 生成无警告&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-verbose 输出关于编译器正在做的信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-deprecation 输出使用了不鼓励使用的API的源程序位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-classpath &lt;路径&gt; 指定用户类文件的位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-sourcepath &lt;路径&gt; 指定输入源文件的位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-bootclasspath &lt;路径&gt; 覆盖自举类文件的位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-extdirs &lt;目录(多个)&gt; 覆盖安装的扩展类的位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-d &lt;目录&gt; 指定输出类文件的位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-encoding &lt;编码&gt; 指定源文件中所用的字符集编码&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-target &lt;版本&gt; 生成指定虚拟机版本的类文件&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-help Print a synopsis of standard options&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">======================================================================<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">appletviewer.exe&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">用法：appletviewer &lt;options&gt; url&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\"></p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">其中，&lt;options&gt; 包括：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-debug 在 Java 调试器中启动 applet 小程序查看器&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-encoding &lt;encoding&gt; 指定由 HTML 文件使用的字符编码&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-J&lt;runtime flag&gt; 向 Java 解释器传递参数&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">-J 选项不是标准选项，如有更改，不另行通知。&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">======================================================================</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">&nbsp;<br style=\"outline: 0px; word-break: break-all;\">jar.exe&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">用法：jar {ctxu}[vfm0M] [jar-文件] [manifest-文件] [-C 目录] 文件名 ...&nbsp;<br style=\"outline: 0px; word-break: break-all;\">选项：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-c 创建新的存档&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-t 列出存档内容的列表&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-x 展开存档中的命名的（或所有的〕文件&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-u 更新已存在的存档&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-v 生成详细输出到标准输出上&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-f 指定存档文件名&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-m 包含来自标明文件的标明信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-0 只存储方式；未用ZIP压缩格式&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-M 不产生所有项的清单（manifest〕文件&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-i 为指定的jar文件产生索引信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-C 改变到指定的目录，并且包含下列文件：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">如果一个文件名是一个目录，它将被递归处理。&nbsp;<br style=\"outline: 0px; word-break: break-all;\">清单（manifest〕文件名和存档文件名都需要被指定，按\'m\' 和 \'f\'标志指定的相同顺序。&nbsp;<br style=\"outline: 0px; word-break: break-all;\">示例1：将两个class文件存档到一个名为 \'classes.jar\' 的存档文件中：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">jar cvf classes.jar Foo.class Bar.class&nbsp;<br style=\"outline: 0px; word-break: break-all;\">示例2：用一个存在的清单（manifest）文件 \'mymanifest\' 将 foo/ 目录下的所有&nbsp;<br style=\"outline: 0px; word-break: break-all;\">文件存档到一个名为 \'classes.jar\' 的存档文件中：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">jar cvfm classes.jar mymanifest -C foo/ .&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">======================================================================</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\"><br style=\"outline: 0px; word-break: break-all;\">javadoc.exe&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">用法：javadoc [options] [packagenames] [sourcefiles] [classnames] [@files]&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-overview &lt;file&gt; 读取 HTML 格式的概述文档&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-public 仅显示 public 类和成员&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-protected 显示 protected/public 类和成员（缺省）&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-package 显示 package/protected/public 类和成员&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-private 显示所有类和成员&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-help 显示命令行选项&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-doclet &lt;class&gt; 通过候选 doclet 生成输出&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-docletpath &lt;path&gt; 指定 doclet 类文件的查找位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-sourcepath &lt;pathlist&gt; 指定源文件的查找位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-classpath &lt;pathlist&gt; 指定用户类文件的查找位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-exclude &lt;pkglist&gt; Specify a list of packages to exclude&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-subpackages &lt;subpkglist&gt; Specify subpackages to recursively load&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-breakiterator Compute 1st sentence with BreakIterator&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-bootclasspath &lt;pathlist&gt; 覆盖自举类加载器所加载的类文件的位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-source &lt;release&gt; Provide source compatibility with specified release&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-extdirs &lt;dirlist&gt; 覆盖已安装的扩展的位置&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-verbose 有关 Javadoc 所做工作的输出信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-locale &lt;name&gt; 所用的 Locale，例如 en_US 或 en_US_WIN&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-encoding &lt;name&gt; 源文件编码名称&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-J&lt;flag&gt; 将 &lt;flag&gt; 直接传给运行时系统&nbsp;<br style=\"outline: 0px; word-break: break-all;\"><br style=\"outline: 0px; word-break: break-all;\">由标准 doclet 提供：&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-d &lt;directory&gt; 输出文件的目标目录&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-use 创建类和包的用法页&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-version 包含 @version 段&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-author 包含 @author 段&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-docfilessubdirs Recursively copy doc-file subdirectories&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-splitindex 将索引分为每个字母对应一个文件&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-windowtitle &lt;text&gt; 文档的浏览器窗口标题&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-doctitle &lt;html-code&gt; 包含包索引页（首页）的标题&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-header &lt;html-code&gt; 包含每一页的页眉文本&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-footer &lt;html-code&gt; 包含每一页的页脚文本&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-bottom &lt;html-code&gt; 包含每一页的页底文本&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-link &lt;url&gt; Create links to javadoc output at &lt;url&gt;&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-linkoffline &lt;url&gt; &lt;url2&gt; Link to docs at &lt;url&gt; using package list at &lt;url2&gt;&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-excludedocfilessubdir &lt;name1&gt;:.. Exclude any doc-files subdirectories with given name.&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-group &lt;name&gt; &lt;p1&gt;:&lt;p2&gt;.. Group specified packages together in overview page&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-nocomment Supress description and tags, generate only declarations.&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-nodeprecated 不包含 @deprecated 信息&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-noqualifier &lt;name1&gt;:&lt;name2&gt;:... Exclude the list of qualifiers from the output.&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-nosince Do not include @since information&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-nodeprecatedlist 不生成不鼓励使用的列表&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-notree 不生成类层次&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-noindex 不生成索引&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-nohelp 不生成帮助链接&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-nonavbar 不生成导航栏&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-quiet Do not display status messages to screen&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-serialwarn Generate warning about @serial tag&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-tag &lt;name&gt;:&lt;locations&gt;:&lt;header&gt; Specify single argument custom tags&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-taglet The fully qualified name of Taglet to register&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-tagletpath The path to Taglets&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-charset &lt;charset&gt; Charset for cross-platform viewing of generated documentation.&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-helpfile &lt;file&gt; 包含帮助链接功能链接到目标的文件&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-linksource Generate source in HTML&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-stylesheetfile &lt;path&gt; 改变所生成文档的样式的文件&nbsp;<br style=\"outline: 0px; word-break: break-all;\">-docencoding &lt;name&gt; 输出编码名称&nbsp;</p>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('8', 'JAVA环境变量配置', '<p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">安装完JDK后，要想要我们开发环境正常运行，我们需要对环境变量进行配置（虽然有时不配置也可以运行，但是最好不要忽略这一步，避免以后一些不必要的麻烦）。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">假设JDK安装在D:\\Java\\jdk1.6.0_45</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">第一步：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">打开环境变量配置窗口<br style=\"outline: 0px; word-break: break-all;\"></p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">XP：在我的电脑上右击，选择属性，打开系统属性窗口，选择高级选项卡，在下面会看到环境变量按钮，单击。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">Win7/8:在计算机（这台电脑）上右击，选择属性，点击新窗口左侧的高级系统设置，打开系统属性窗口，在下面会看到环境变<span style=\"color: rgb(79, 79, 79); font-size: 1rem; font-weight: 400;\">第二步：</span></p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">配置环境变量，JAVA的环境变量总共有3个，分别为：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">JAVA_HOME:D:\\Java\\jdk1.6.0_45（修改为实际安装目录）</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">CLASSPATH:.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar;%JAVA_HOME%\\lib\\dt.jar（注意前面有个.，不可省略）</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">Path:%JAVA_HOME%\\bin（这个变量正常情况下系统中已存在，可以单击编辑按钮，在最后添加，以;分隔）</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">第三步：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">验证环境变量，打开CMD控制台，输入java -version，回车，可以查看当前JDK的版本信息</p>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('11', '第一个JAVA程序', '<p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">前面几篇博文介绍了JAVA的特点以及开发工具集，从这篇开始，我们真正的学习JAVA的语法等知识。本篇将介绍如何使用记事本编写我们的第一个JAVA程序并通过控制台编译运行。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">第一步：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">新建文本文档，编辑内容如下所示：</p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">/**</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp;*&nbsp; 我的第一个Java程序</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp;*/</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">public class HelloWorld {</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp;/**</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; *&nbsp; 程序入口方法</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; */</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp;public static void main(String[] args) {</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; &nbsp; //在控制台输出Hello World!</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; &nbsp; System.out.println(\"Hello World!\");</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp;}</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">}</font></p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">第二步：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">保存文件，更改文件名为：HelloWorld.java。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">第三步：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">打开控制台，进入文件所在目录，输入：javac HelloWorld.java，回车，对源文件进行编译。在文件同目录下会生成一个新的文件：HelloWorld.class。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">第四步：</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">输入：java HelloWorld，回车，运行生成的字节码文件，控制台会打印出：HelloWorld!</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">到此，一个最简单的JAVA程序，我们已经成功的编译运行了，在下一篇博文中，将会对这个过程进行剖析。</p>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('12', '第一个JAVA程序解析', '<p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">上一篇博客中，我们编写了第一个JAVA程序并使用最原始的方式对其进行编译运行，很多文章或书籍中对该种编译运行方式不做介绍，但是我认为这有助于我们更好的了解、学习JAVA，是不可忽略的一部分，在我身边有很多人，学完一段时间JAVA后，只知道如何在IDE中进行开发，却不知脱离IDE后该如何运行，不得不说这也是一种悲哀。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">言归正传，我们来看一下上一篇博客中的例子\"Hello World\"，这也是几乎所有的编程语言都会编写的一个例子，非常的经典。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">下面我们就来分析一下：</p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">/**</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp;*&nbsp; 我的第一个Java程序</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp;*/</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">public class HelloWorld {</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp;</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp;/**</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; *&nbsp; 程序入口方法</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; */</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp;public static void main(String[] args) {</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; &nbsp; //在控制台输出Hello World!</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp; &nbsp; System.out.println(\"Hello World!\");</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">&nbsp; &nbsp;}</font></p><p style=\"outline: 0px; margin-bottom: 16px; line-height: 26px; text-align: justify; word-break: break-all;\"><font face=\"PingFang SC, Microsoft YaHei, SimHei, Arial, SimSun\">}</font></p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">1、前三行为代码的注释，在实际编译过程中会被忽略，JAVA中注释的方式有两种：块注释和行注释，正如我们看到的一样，在这段代码中，1-3、6-8行都为块注释，块注释的形式为：/*......*/，包含在中间的内容都为注释内容。10行为行注释，注释形式为：//......，同一行中//后面的内容为注释内容。<br style=\"outline: 0px; word-break: break-all;\"></p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">2、JAVA的源文件是以.java为后缀的文件，本质上就是文本文件，经编译器编译后生成字节码，编译后的文件以.class作为文件结尾，JAVA运行的就是以.class文件结尾的文件（或打包后的.jar文件）。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">3、第4行中的HelloWorld为类名（先了解类名的概念，后续会介绍），文件名必须与类名相同，即该文件的文件名为：HelloWorld.java，则编译后的文件名为：HelloWorld.class。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">4、第9行public static void main(String[] args)，main为JAVA程序的入口方法，JAVA程序必须含有该方法，程序从该方法开始执行。括号内的String[] args为形参，用于接收启动程序时输入的命令。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">5、第11行会在控制台上输入：Hello World!。</p><p style=\"outline: 0px; margin-bottom: 16px; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-break: break-all; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun;\">到此，第一个JAVA程序已经分析完了，在上面提到了一些概念，大家只需要了解，后面会介绍，现在不需要纠结。</p>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('13', 'Java语言基本数据类型图解', '<p style=\"text-align: center; \"><img src=\"https://images0.cnblogs.com/blog/679566/201410/111551540305483.png\" style=\"width: 50%;\"></p><p style=\"text-align: center; \"><br></p>', '2018-06-02', '2018-06-02', '1', '1');
INSERT INTO `post` VALUES ('14', 'JAVA基础教程汇总', '<h1 id=\"java介绍\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\">JAVA介绍</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49835525\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA概述</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49851731\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">Java的特点</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49942615\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JDK/bin目录下的不同exe文件的用途</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49947419\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA环境变量配置</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49948383\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">第一个JAVA程序</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49962579\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">第一个JAVA程序解析</a></li></ol><h1 id=\"java语法基础\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t1\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA语法基础</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49978469\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA语法基础之标识符和关键字</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/49979707\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA语法基础之变量和基本数据类型</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50001653\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA语法基础之运算符</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50185775\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA语法基础之流程控制</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50353866\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA语法基础之数组</a></li></ol><h1 id=\"java面向对象\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t2\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA面向对象</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50359934\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之对象和类</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50382271\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之构造方法</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50389700\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之方法</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50389958\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之静态属性和方法</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50396247\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之封装</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50396917\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之继承</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50401308\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之多态</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50403882\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之抽象类和接口</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50409470\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA面向对象之内部类</a></li></ol><h1 id=\"java常用类\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t3\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA常用类</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50409528\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA常用类之String</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50408190\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA常用类之StringBuffer</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50408284\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA常用类之Math</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50408802\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA常用类之日期处理</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50411434\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA常用类之格式化</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50412004\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA常用类之包装类</a></li></ol><h1 id=\"java异常处理\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t4\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA异常处理</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50412323\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA异常处理</a></li></ol><h1 id=\"java集合框架\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t5\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA集合框架</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50413677\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA集合框架</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50417078\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA集合框架之Set接口实现类</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50417224\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA集合框架之List接口实现类</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50420303\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA集合框架之Map接口实现类</a></li></ol><h1 id=\"java泛型\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t6\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA泛型</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50426332\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA泛型</a></li></ol><h1 id=\"java输入输出io\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t7\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA输入输出（IO）</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50426704\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA输入输出（IO）之文件</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50426965\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA输入输出（IO）之字节流</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50432501\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA输入输出（IO）之字符流</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50434730\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA输入输出（IO）之常用流</a></li></ol><h1 id=\"java图形界面gui\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t8\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA图形界面（GUI）</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50437807\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA图形界面（GUI）</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50441088\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA图形界面（GUI）之容器</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50442687\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA图形界面（GUI）之常用组件</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50445093\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA图形界面（GUI）之布局管理器</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50448974\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA图形界面（GUI）之事件处理机制</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50452544\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA图形界面（GUI）之表格</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50452692\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA图形界面（GUI）之菜单</a></li></ol><h1 id=\"java多线程机制\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t9\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA多线程机制</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50452813\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA多线程机制之线程概念</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50456005\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA多线程机制之线程创建</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50458147\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA多线程机制之同步与互斥</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50458486\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA多线程机制之暂停、恢复和停止</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50459112\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA多线程机制之死锁</a></li></ol><h1 id=\"java网络编程\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t10\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA网络编程</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50460640\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA网络编程之获取网络资源</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50462655\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA网络编程之模拟表单提交</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50463936\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA网络编程之Socket</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50464782\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA网络编程之UDP</a></li></ol><h1 id=\"java访问数据库\" style=\"outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; color: rgb(79, 79, 79); font-weight: 700; line-height: 36px; word-break: break-all; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun;\"><a name=\"t11\" style=\"outline: 0px; color: rgb(78, 161, 219); text-decoration: none; word-break: break-all;\"></a>JAVA访问数据库</h1><ol style=\"outline: 0px; margin-bottom: 24px; list-style: none; word-break: break-all; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px;\"><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50465437\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA访问数据库之概述</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50465803\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA访问数据库之连接数据库</a></li><li style=\"outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; word-break: break-all;\"><a href=\"http://blog.csdn.net/jianggujin/article/details/50478439\" target=\"_blank\" style=\"outline: 0px; color: rgb(103, 149, 181); text-decoration: none; word-break: break-all;\">JAVA访问数据库之增删改查(CRUD)</a></li></ol>', '2018-06-02', '2018-06-02', '1', '1');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL,
  `password` varchar(20) NOT NULL,
  `avatar` varchar(200) DEFAULT NULL,
  `nickname` varchar(20) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `sex` varchar(10) DEFAULT NULL,
  `personalDescription` varchar(400) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', 'Pro.Du', '123456', 'https://i.loli.net/2018/06/02/5b122aae78790.jpg', '你根本就不是可达鸭', '2504621508@qq.com', '男', '我今天要爆炸、');
